{"version":3,"sources":["webpack:////home/runner/work/puigfp.github.io/puigfp.github.io/src/pages/blog/post.js"],"names":["footnotesPlugin","rootNode","footnotesNodes","children","filter","node","type","footnotesNode","otherNodes","concat","renderers","math","value","inlineMath","code","language","style","tomorrow","footnotes","className","footnoteDefinition","label","id","href","footnoteReference","slug","post","useRouteData","metadata","title","Date","date","toISOString","slice","source","body","parserOptions","escapeHtml","astPlugins","plugin","undefined","url","plugins","remarkMath","remarkFootnotes"],"mappings":"suCAYA,IAAMA,EAAkB,SAACC,GAEvB,IAFoC,EAE9BC,EAAiBD,EAASE,SAASC,QACvC,SAACC,GAAD,MAAwB,uBAAdA,EAAKC,QAHmB,IAMjBJ,GANiB,IAMpC,2BAAmC,CAAC,IAAzBG,EAAwB,QACjCA,EAAKF,SAAWE,EAAKF,SAAS,GAAGA,UAPC,8BAUpC,IAAMI,EAAgB,CACpBD,KAAM,YACNH,SAAUD,GAGNM,EAAaP,EAASE,SAASC,QACnC,SAACC,GAAD,MAAwB,uBAAdA,EAAKC,QAIjB,OADAL,EAASE,SAAW,GAAGM,OAAOD,GAAYC,OAAO,CAACF,IAC3CN,GAuBHS,EAAY,CAEhBC,KAAM,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,YAAD,CAAWD,KAAMC,KACtCC,WAAY,gBAAGD,EAAH,EAAGA,MAAH,OAAe,kBAAC,aAAD,CAAYD,KAAMC,KAG7CE,KAAM,gBAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,SAAV,OACJ,kBAAC,IAAD,CAAmBA,SAAUA,EAAUC,MAAOC,KAC3CL,IAKLM,UAAW,gBAAGf,EAAH,EAAGA,SAAH,OAAkB,yBAAKgB,UAAU,aAAahB,IAGzDiB,mBAAoB,gBAAGC,EAAH,EAAGA,MAAOlB,EAAV,EAAUA,SAAV,OAClB,yBAAKmB,GAAE,aAAQD,GAASF,UAAU,YAC/BE,EACA,KACAlB,EACD,6BACE,uBAAGoB,KAAI,iBAAYF,IAAnB,eAMNG,kBAAmB,gBAAGH,EAAH,EAAGA,MAAH,OACjB,6BACE,uBAAGE,KAAI,cAASF,GAASC,GAAE,gBAAWD,IACnCA,MAMM,qBAAO,IAxDII,EAyDhBC,EAASC,yBAATD,KACR,OACE,yBAAKP,UAAU,YACb,4BAAKO,EAAKE,SAASC,OACnB,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,QACZ,IAAIW,KAAKJ,EAAKE,SAASG,MAAMC,cAAcC,MAAM,EAAG,MAGzD,kBAAC,IAAD,CACEC,OAAQR,EAAKS,KACbC,cAAe,CACblB,WAAW,GAEbmB,YAAY,EACZC,WAAY,CAACtC,GAxEKyB,EAwE6BC,EAAKE,SAASH,KAvEpD,SAATc,EAAUlC,GACd,GAAkB,UAAdA,EAAKC,MAKT,QAAsBkC,IAAlBnC,EAAKF,SAAT,CANuB,UASJE,EAAKF,UATD,IASvB,2BACEoC,EADgC,SATX,8BAYvB,OAAOlC,QATLA,EAAKoC,IAAL,qBAAyBhB,EAAzB,YAAiCpB,EAAKoC,QAqEpCC,QAAS,CACPC,IACAC,KAEFlC,UAAWA","file":"templates/__react_static_root__/src/pages/blog/post.ff7d2ca5.js","sourcesContent":["// 3p\nimport React from \"react\";\nimport { useRouteData } from \"react-static\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkMath from \"remark-math\";\nimport remarkFootnotes from \"remark-numbered-footnote-labels\";\nimport { InlineMath, BlockMath } from \"react-katex\";\nimport \"katex/dist/katex.min.css\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\n// Mdast (Markdown AST) plugin to move footnotes definitions to the end\nconst footnotesPlugin = (rootNode) => {\n  // get footnotes nodes\n  const footnotesNodes = rootNode.children.filter(\n    (node) => node.type === \"footnoteDefinition\"\n  );\n  // remove unnecessary nesting in footnotes (content is wrapped in a <p> tag)\n  for (const node of footnotesNodes) {\n    node.children = node.children[0].children;\n  }\n  // create special footnotes node\n  const footnotesNode = {\n    type: \"footnotes\",\n    children: footnotesNodes,\n  };\n  // get other nodes\n  const otherNodes = rootNode.children.filter(\n    (node) => node.type !== \"footnoteDefinition\"\n  );\n  // overwrite root node children to move footnotes to the end\n  rootNode.children = [].concat(otherNodes).concat([footnotesNode]);\n  return rootNode;\n};\n\n// Mdast (Markdown AST) plugin to update images urls\nconst imagesPathPlugin = (slug) => {\n  const plugin = (node) => {\n    if (node.type === \"image\") {\n      // TODO: add special behavior for absolute paths (to external images)\n      node.url = `/blog/post/${slug}/${node.url}`;\n      return;\n    }\n    if (node.children === undefined) {\n      return;\n    }\n    for (const node of node.children) {\n      plugin(node);\n    }\n    return node;\n  };\n  return plugin;\n};\n\n// custom renderers\nconst renderers = {\n  // KateX renderers for math blocks\n  math: ({ value }) => <BlockMath math={value} />,\n  inlineMath: ({ value }) => <InlineMath math={value} />,\n\n  // code blocks\n  code: ({ value, language }) => (\n    <SyntaxHighlighter language={language} style={tomorrow}>\n      {value}\n    </SyntaxHighlighter>\n  ),\n\n  // custom footnotes node\n  footnotes: ({ children }) => <div className=\"footnotes\">{children}</div>,\n\n  // footnotes definitions\n  footnoteDefinition: ({ label, children }) => (\n    <div id={`fn-${label}`} className=\"footnote\">\n      {label}\n      {\". \"}\n      {children}\n      <sup>\n        <a href={`#fnref-${label}`}>[Return]</a>\n      </sup>\n    </div>\n  ),\n\n  // footnotes references\n  footnoteReference: ({ label }) => (\n    <sup>\n      <a href={`#fn-${label}`} id={`fnref-${label}`}>\n        {label}\n      </a>\n    </sup>\n  ),\n};\n\nexport default () => {\n  const { post } = useRouteData();\n  return (\n    <div className=\"markdown\">\n      <h1>{post.metadata.title}</h1>\n      <div className=\"date-container\">\n        <div className=\"date\">\n          {new Date(post.metadata.date).toISOString().slice(0, 10)}\n        </div>\n      </div>\n      <ReactMarkdown\n        source={post.body}\n        parserOptions={{\n          footnotes: true,\n        }}\n        escapeHtml={false}\n        astPlugins={[footnotesPlugin, imagesPathPlugin(post.metadata.slug)]}\n        plugins={[\n          remarkMath, // latex equations\n          remarkFootnotes, // footnotes auto-numbering\n        ]}\n        renderers={renderers}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}